/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package virtualHospital;

import java.awt.*;
import java.io.*;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author sshth
 */
public class VirtualHospitalMainForm extends JFrame {
public boolean isBack=false;
    public String[][] Dataa = new String[2][10];
    public String PatientId;

    
    /**
     * Creates new form VirtualHospitalMainForm
     */
    public VirtualHospitalMainForm() {
        initComponents();

    }

  public  VirtualHospitalMainForm(String[][] data) {

        Dataa=data;
        isBack=true;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        FirstNameLabel = new javax.swing.JLabel();
        LastNameLabel = new javax.swing.JLabel();
        AgeLabel = new javax.swing.JLabel();
        GenderLabel = new javax.swing.JLabel();
        NameTitleComboBox = new javax.swing.JComboBox<>();
        LastNameText = new javax.swing.JTextField();
        FirstNameText = new javax.swing.JTextField();
        AgeText = new javax.swing.JTextField();
        MaleRadioButton = new javax.swing.JRadioButton();
        FemaleRadioButton = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        FNameTitleComboBox = new javax.swing.JComboBox<>();
        FLastNameText = new javax.swing.JTextField();
        FFirstNameText = new javax.swing.JTextField();
        TitleLabel2 = new javax.swing.JLabel();
        FirstNameLabel2 = new javax.swing.JLabel();
        LastNameLabel2 = new javax.swing.JLabel();
        NextButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VIRTUAL HOSPITAL");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/maintitle.png"))); // NOI18N
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Personal Information");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        TitleLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TitleLabel.setText("Title");

        FirstNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FirstNameLabel.setText("First Name");

        LastNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LastNameLabel.setText("Last Name");

        AgeLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AgeLabel.setText("Age");

        GenderLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        GenderLabel.setText("Gender");

        NameTitleComboBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        NameTitleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Dr." }));

        LastNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LastNameText.setNextFocusableComponent(AgeText);

        FirstNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FirstNameText.setNextFocusableComponent(LastNameText);

        AgeText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AgeText.setNextFocusableComponent(MaleRadioButton);

        buttonGroup1.add(MaleRadioButton);
        MaleRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        MaleRadioButton.setSelected(true);
        MaleRadioButton.setText("Male");

        buttonGroup1.add(FemaleRadioButton);
        FemaleRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FemaleRadioButton.setText("Female");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(TitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FirstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LastNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GenderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(MaleRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FemaleRadioButton)
                                .addGap(15, 15, 15))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AgeText, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(NameTitleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameTitleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgeLabel)
                    .addComponent(AgeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaleRadioButton)
                    .addComponent(FemaleRadioButton)
                    .addComponent(GenderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Father / Gaurdian Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        FNameTitleComboBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FNameTitleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Dr." }));

        FLastNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FLastNameText.setNextFocusableComponent(NextButton);

        FFirstNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FFirstNameText.setNextFocusableComponent(FLastNameText);

        TitleLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TitleLabel2.setText("Title");

        FirstNameLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FirstNameLabel2.setText("First Name");

        LastNameLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LastNameLabel2.setText("Last Name");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(TitleLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FirstNameLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                    .addComponent(LastNameLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FFirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FLastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FNameTitleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(268, 268, 268))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FNameTitleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstNameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FFirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LastNameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FLastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        NextButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        NextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/nextButton.png"))); // NOI18N
        NextButton.setText("Next");
        NextButton.setName(""); // NOI18N
        NextButton.setNextFocusableComponent(ExitButton);
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        ExitButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ExitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/BackBUtton.png"))); // NOI18N
        ExitButton.setText("Back");
        ExitButton.setNextFocusableComponent(NameTitleComboBox);
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NextButton, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed

        PatientId = "VHJJ" + (1000 + (long) (Math.random() * 99999999));
        File file = new File("./src/VirtualHospital/Files/PatientInfo.txt");
        if (isValidated()) {
       
                isPatientIdUnique(file);
Dataa[0][0]=PatientId;
Dataa[1][0]=PatientId;
               Dataa[0][1] = NameTitleComboBox.getSelectedItem().toString();
               Dataa[0][2] = FirstNameText.getText().trim();
                Dataa[0][3] = LastNameText.getText().trim();
                Dataa[0][4] = AgeText.getText().trim();
                Dataa[0][5] = MaleRadioButton.isSelected() ? "Male" : "Female";
                Dataa[1][1] = FNameTitleComboBox.getSelectedItem().toString();
                Dataa[1][2] = FFirstNameText.getText().trim();
                Dataa[1][3] = FLastNameText.getText().trim();
                

           
            
            new VirtualHospitalSecondForm(Dataa).setVisible(true);this.dispose();
    }
        
    }//GEN-LAST:event_NextButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (isBack ==true) {
            
            NameTitleComboBox.setSelectedItem(Dataa[0][1]);
            FirstNameText.setText(Dataa[0][2]);
            LastNameText.setText(Dataa[0][3]);
            AgeText.setText(Dataa[0][4]);
            if ("Male".equals(Dataa[0][5])) {
                MaleRadioButton.setSelected(true);
            } else if ("Female".equals(Dataa[0][5])) {
                FemaleRadioButton.setSelected(true);
            }
            FNameTitleComboBox.setSelectedItem(Dataa[1][1]);
            FFirstNameText.setText(Dataa[1][2]);
            FLastNameText.setText(Dataa[1][3]);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed

        if (JOptionPane.showConfirmDialog(null, "Are You Sure?", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
           new Main().setVisible(true);
           this.dispose();
        }
    }//GEN-LAST:event_ExitButtonActionPerformed

    public void isPatientIdUnique(File file) {
        FileReader fm = null;
        try {
            fm = new FileReader(file);
            BufferedReader bff = new BufferedReader(fm);
            String line;
            while ((line = bff.readLine()) != null) {
                String[] SubString = line.split(",");
                if (SubString[0].equals(PatientId)) {
                    PatientId = "VHJJ" + (1000 + (long) (Math.random() * 99999999));
                }
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(VirtualHospitalMainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VirtualHospitalMainForm.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fm.close();
            } catch (IOException ex) {
                Logger.getLogger(VirtualHospitalMainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VirtualHospitalMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VirtualHospitalMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VirtualHospitalMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VirtualHospitalMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VirtualHospitalMainForm().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AgeLabel;
    private javax.swing.JTextField AgeText;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField FFirstNameText;
    private javax.swing.JTextField FLastNameText;
    private javax.swing.JComboBox<String> FNameTitleComboBox;
    private javax.swing.JRadioButton FemaleRadioButton;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JLabel FirstNameLabel2;
    private javax.swing.JTextField FirstNameText;
    private javax.swing.JLabel GenderLabel;
    private javax.swing.JLabel LastNameLabel;
    private javax.swing.JLabel LastNameLabel2;
    private javax.swing.JTextField LastNameText;
    private javax.swing.JRadioButton MaleRadioButton;
    private javax.swing.JComboBox<String> NameTitleComboBox;
    private javax.swing.JButton NextButton;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JLabel TitleLabel2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
public boolean isStringonlyName(String text) {

        for (int i = 0; i < text.length(); i++) {
            char a = text.charAt(i);
            if (!Character.isAlphabetic(a) && !Character.isWhitespace(a)) {
                return false;

            }
        }

        return true;
    }

    private boolean isValidated() {
        if (NameTitleComboBox.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Name Title is required", "Error", JOptionPane.ERROR_MESSAGE);
            NameTitleComboBox.requestFocus();
            return false;
        }
        if (FirstNameText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "First Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            FirstNameText.requestFocus();
            return false;

        }

        if (!isStringonlyName(FirstNameText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "First Name should only be Alphabet", "Error", JOptionPane.ERROR_MESSAGE);
            FirstNameText.setText("");
            FirstNameText.requestFocus();
            return false;

        }
        if (LastNameText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Last Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            LastNameText.requestFocus();
            return false;

        }

        if (!isStringonlyName(LastNameText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Last Name should be Alphabet", "Error", JOptionPane.ERROR_MESSAGE);
            LastNameText.setText("");
            LastNameText.requestFocus();
            return false;

        }
        if (AgeText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Age is required", "Error", JOptionPane.ERROR_MESSAGE);
            AgeText.requestFocus();
            return false;

        }

        if (!isStringonlyInteger(AgeText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Age should be Integer ", "Error", JOptionPane.ERROR_MESSAGE);
            AgeText.setText("");
            AgeText.requestFocus();
            return false;

        }
        if (AgeText.getText().trim().length() < 0 || AgeText.getText().trim().length() > 3) {
            JOptionPane.showMessageDialog(null, "Age shouldn't increase Hundrends", "Error", JOptionPane.ERROR_MESSAGE);
            AgeText.setText("");
            AgeText.requestFocus();
            return false;

        }

        if (FNameTitleComboBox.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Father Name Title is required", "Error", JOptionPane.ERROR_MESSAGE);
            FNameTitleComboBox.requestFocus();
            return false;
        }
        if (FFirstNameText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Father First Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            FFirstNameText.requestFocus();
            return false;

        }

        if (!isStringonlyName(FFirstNameText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Father First Name should only be Alphabet", "Error", JOptionPane.ERROR_MESSAGE);
            FFirstNameText.setText("");
            FFirstNameText.requestFocus();
            return false;

        }
        if (FLastNameText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Father Last Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            FLastNameText.requestFocus();
            return false;

        }

        if (!isStringonlyName(FLastNameText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Father Last Name should be Alphabet", "Error", JOptionPane.ERROR_MESSAGE);
            FLastNameText.setText("");
            FLastNameText.requestFocus();
            return false;

        }
        return true;
    }

    public boolean isStringonlyInteger(String text) {
        boolean isStringInteger = true;
        try {
            int age = Integer.parseInt(text);
            isStringInteger = true;
        } catch (NumberFormatException ex) {
            isStringInteger = false;
        }
        return isStringInteger;
    }
}
