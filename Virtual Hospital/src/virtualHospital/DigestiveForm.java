/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package virtualHospital;

import javax.swing.JOptionPane;

/**
 *
 * @author sshth
 */
public class DigestiveForm extends javax.swing.JFrame {
public String Dataa[][]=null;
    public String[] EyeDiseases = {"Gestro Esophageal Refluc Disease", "Peptic Ulser", "CLD", "Cholicystitis", "Ulceratice Colitis", "Appendicitis", "Peritonitis"};

    /**
     * Creates new form EyeForm
     */
    public DigestiveForm() {
        initComponents();
    }
    public DigestiveForm(String Data[][]){
        Dataa=Data;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Iritation = new javax.swing.JCheckBox();
        Etching = new javax.swing.JCheckBox();
        Watering = new javax.swing.JCheckBox();
        Burning = new javax.swing.JCheckBox();
        Redness = new javax.swing.JCheckBox();
        ScaringEyeLids = new javax.swing.JCheckBox();
        SwalingsMargins = new javax.swing.JCheckBox();
        photophibia = new javax.swing.JCheckBox();
        Dimness = new javax.swing.JCheckBox();
        bluring = new javax.swing.JCheckBox();
        Nausea = new javax.swing.JCheckBox();
        Hemorrhage = new javax.swing.JCheckBox();
        COngestion = new javax.swing.JCheckBox();
        Odema = new javax.swing.JCheckBox();
        SeverePain = new javax.swing.JCheckBox();
        totalvisionloss = new javax.swing.JCheckBox();
        GradualLossSugar = new javax.swing.JCheckBox();
        BackButton = new javax.swing.JButton();
        NextButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/maintitle.png"))); // NOI18N
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Please Select Your Symptoms");
        jLabel2.setToolTipText("");

        Iritation.setText("Heart Burning");

        Etching.setText("Indigestion");

        Watering.setText("Flatulence");

        Burning.setText("Irritability");
        Burning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BurningActionPerformed(evt);
            }
        });

        Redness.setText("Pain");
        Redness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RednessActionPerformed(evt);
            }
        });

        ScaringEyeLids.setText("Pain Abdomen");

        SwalingsMargins.setText("Vomiting");

        photophibia.setText("Constipation");

        Dimness.setText("In-Digestion");

        bluring.setText("Bluring of Vision");

        Nausea.setText("Rectal Bleeding");

        Hemorrhage.setText("Lack of Appetite");

        COngestion.setText("Faltulens");

        Odema.setText("Pain Epigastium");

        SeverePain.setText("Severe Pain in right of lower abdomen");

        totalvisionloss.setText("Fever");

        GradualLossSugar.setText("Water in Abdominal Cavity");

        BackButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/BackBUtton.png"))); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        NextButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        NextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/nextButton.png"))); // NOI18N
        NextButton.setText("Next");
        NextButton.setName(""); // NOI18N
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Iritation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Hemorrhage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(photophibia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Redness, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(GradualLossSugar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(COngestion, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Etching, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ScaringEyeLids, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Burning, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Dimness, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SeverePain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bluring)
                                            .addComponent(SwalingsMargins)
                                            .addComponent(Watering, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Odema, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Nausea, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(409, 409, 409)
                                .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(totalvisionloss, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Iritation)
                    .addComponent(Etching)
                    .addComponent(Watering))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Redness)
                    .addComponent(ScaringEyeLids)
                    .addComponent(SwalingsMargins))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Hemorrhage)
                    .addComponent(COngestion)
                    .addComponent(Odema))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(photophibia)
                    .addComponent(Dimness)
                    .addComponent(Nausea))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GradualLossSugar)
                    .addComponent(Burning)
                    .addComponent(SeverePain))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalvisionloss)
                    .addComponent(bluring))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        new DepartmentsList(Dataa).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed

        if (isvalidated()) {

            int n = GuessDisease();
            new DigestionResults(n, EyeDiseases,Dataa).setVisible(true);
            this.dispose();
        }

    }//GEN-LAST:event_NextButtonActionPerformed

    public int GuessDisease() {
        int n = 0;
        if (Iritation.isSelected()) {
            if (Etching.isSelected()) {
                if (Watering.isSelected()) {
                    n = 0;
                    if (Redness.isSelected()) {
                        n = 1;

                    }
                }
            }
        } else if (SwalingsMargins.isSelected() && ScaringEyeLids.isSelected() && Hemorrhage.isSelected() && GradualLossSugar.isSelected()) {

            n = 2;

        } else if (Dimness.isSelected() && photophibia.isSelected() && Odema.isSelected()) {
            n = 3;
        } else if (Burning.isSelected() && Nausea.isSelected() && ScaringEyeLids.isSelected()) {
            n = 4;
        } else if (totalvisionloss.isSelected()) {
            if (SwalingsMargins.isSelected()) {
                if (Watering.isSelected()) {
                    if (ScaringEyeLids.isSelected()) {
                        n = 6;
                    }
                }
                if (SeverePain.isSelected()) {
                    n = 5;
                }
            }
        }
        return n;
    }

    private void RednessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RednessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RednessActionPerformed

    private void BurningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BurningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BurningActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JCheckBox Burning;
    private javax.swing.JCheckBox COngestion;
    private javax.swing.JCheckBox Dimness;
    private javax.swing.JCheckBox Etching;
    private javax.swing.JCheckBox GradualLossSugar;
    private javax.swing.JCheckBox Hemorrhage;
    private javax.swing.JCheckBox Iritation;
    private javax.swing.JCheckBox Nausea;
    private javax.swing.JButton NextButton;
    private javax.swing.JCheckBox Odema;
    private javax.swing.JCheckBox Redness;
    private javax.swing.JCheckBox ScaringEyeLids;
    private javax.swing.JCheckBox SeverePain;
    private javax.swing.JCheckBox SwalingsMargins;
    private javax.swing.JCheckBox Watering;
    private javax.swing.JCheckBox bluring;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox photophibia;
    private javax.swing.JCheckBox totalvisionloss;
    // End of variables declaration//GEN-END:variables

    private boolean isvalidated() {
        if (!((Iritation.isSelected()) || (Etching.isSelected()) || (Watering.isSelected()) || (Redness.isSelected()) || (ScaringEyeLids.isSelected()) || (SwalingsMargins.isSelected()) || (Hemorrhage.isSelected()) || (COngestion.isSelected()) || (Odema.isSelected()) || (photophibia.isSelected()) || (Dimness.isSelected()) || (Nausea.isSelected()) || (GradualLossSugar.isSelected()) || (Burning.isSelected()) || (SeverePain.isSelected()) || (totalvisionloss.isSelected()) || (bluring.isSelected()))) {
            JOptionPane.showMessageDialog(null, "One of the symptom must be selected", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

}
