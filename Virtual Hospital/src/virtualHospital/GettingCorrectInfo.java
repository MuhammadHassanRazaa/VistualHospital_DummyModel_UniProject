/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package virtualHospital;

import java.io.*;
import java.util.*;

import javax.swing.*;

/**
 *
 * @author sshth
 */
public class GettingCorrectInfo extends javax.swing.JFrame {
    public String aaa,bbb;
    public String Dataa[][]=new String[10][8];
    public GettingCorrectInfo() {
        initComponents();
    }
    public GettingCorrectInfo(String[][]data,String aa,String bb) {
   aaa=aa;
   bbb=bb;
        Dataa=data;
 initComponents();    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        FirstNameLabel = new javax.swing.JLabel();
        LastNameLabel = new javax.swing.JLabel();
        AgeLabel = new javax.swing.JLabel();
        FirstNameText = new javax.swing.JTextField();
        AgeText = new javax.swing.JTextField();
        AgeLabel1 = new javax.swing.JLabel();
        LastNameText = new javax.swing.JTextField();
        LastNameLabel1 = new javax.swing.JLabel();
        AddressText = new javax.swing.JTextField();
        Address2Text = new javax.swing.JTextField();
        MaleRadioButton = new javax.swing.JRadioButton();
        FemaleRadioButton = new javax.swing.JRadioButton();
        NameTitleComboBox = new javax.swing.JComboBox<>();
        PhoneText = new javax.swing.JFormattedTextField();
        EmailComboBox = new javax.swing.JComboBox<>();
        EmailText = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        TitleLabel1 = new javax.swing.JLabel();
        LastNameLabel3 = new javax.swing.JLabel();
        FFirstNameText = new javax.swing.JTextField();
        AgeLabel3 = new javax.swing.JLabel();
        FLastNameText = new javax.swing.JTextField();
        LastNameLabel4 = new javax.swing.JLabel();
        FAddressText = new javax.swing.JTextField();
        FAddress2Text = new javax.swing.JTextField();
        NameTitleComboBox1 = new javax.swing.JComboBox<>();
        PhoneText1 = new javax.swing.JFormattedTextField();
        EmailText1 = new javax.swing.JTextField();
        EmailComboBox1 = new javax.swing.JComboBox<>();
        ExitButton = new javax.swing.JButton();
        NextButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/maintitle.png"))); // NOI18N
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Please Modify your Information ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        TitleLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TitleLabel.setText("Name");

        FirstNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FirstNameLabel.setText("Age");

        LastNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LastNameLabel.setText("Contact");

        AgeLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AgeLabel.setText("Gender");

        FirstNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        AgeText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        AgeLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AgeLabel1.setText("Email");

        LastNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        LastNameLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LastNameLabel1.setText("Address");

        AddressText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        Address2Text.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        buttonGroup1.add(MaleRadioButton);
        MaleRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        MaleRadioButton.setText("Male");

        buttonGroup1.add(FemaleRadioButton);
        FemaleRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        FemaleRadioButton.setText("Female");

        NameTitleComboBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        NameTitleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Dr." }));

        try {
            PhoneText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+92###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        PhoneText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        EmailComboBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        EmailComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "@gmail.com", "@hotmail.com", "@outlook.com", "@live.com", "@yahoo.com", "@protonmail.com" }));
        EmailComboBox.setSelectedItem("<Select Domain>");
        EmailComboBox.setName("EmailComboBox"); // NOI18N

        EmailText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        EmailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LastNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(LastNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AgeText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(MaleRadioButton)
                                .addGap(50, 50, 50)
                                .addComponent(FemaleRadioButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AgeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EmailText, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EmailComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(AddressText)
                    .addComponent(Address2Text, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(NameTitleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameTitleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AgeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AgeLabel)
                            .addComponent(MaleRadioButton)
                            .addComponent(FemaleRadioButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgeLabel1)
                    .addComponent(PhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EmailComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LastNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Address2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Father/ Gaurdian Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        TitleLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TitleLabel1.setText("Name");

        LastNameLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LastNameLabel3.setText("Contact");

        FFirstNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        AgeLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AgeLabel3.setText("Email");

        FLastNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        LastNameLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        LastNameLabel4.setText("Address");

        FAddressText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        FAddress2Text.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        NameTitleComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        NameTitleComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Dr." }));

        try {
            PhoneText1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+92###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        PhoneText1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        EmailText1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        EmailText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailText1ActionPerformed(evt);
            }
        });

        EmailComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        EmailComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "@gmail.com", "@hotmail.com", "@outlook.com", "@live.com", "@yahoo.com", "@protonmail.com" }));
        EmailComboBox1.setSelectedItem("<Select Domain>");
        EmailComboBox1.setName("EmailComboBox"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LastNameLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(LastNameLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TitleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FAddress2Text)
                    .addComponent(FAddressText)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(NameTitleComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FFirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FLastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(PhoneText1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(AgeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EmailText1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EmailComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FFirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FLastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameTitleComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LastNameLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgeLabel3)
                    .addComponent(PhoneText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EmailText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EmailComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LastNameLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FAddress2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        ExitButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ExitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/exitButton.png"))); // NOI18N
        ExitButton.setText("Back to Home");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        NextButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        NextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualHospital/Images/edit-6.png"))); // NOI18N
        NextButton.setText("Modify");
        NextButton.setName(""); // NOI18N
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed

        if (JOptionPane.showConfirmDialog(null, "Are You Sure?", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            new Main().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        
            if(isValidated()){
                try {
                    StoringData.CompleteDataFrom2DArray(Dataa);
                    new DepartmentsList(Dataa).setVisible(true);this.dispose();
                } catch (IOException ex) {
                   JOptionPane.showMessageDialog(null, "FileNot Found", "Error", JOptionPane.ERROR_MESSAGE);
                }
                
                      }
    }//GEN-LAST:event_NextButtonActionPerformed

    

    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

     
      InfoPrintinf(Dataa);

    }//GEN-LAST:event_formWindowOpened

    private void EmailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTextActionPerformed

    private void EmailText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailText1ActionPerformed


    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address2Text;
    private javax.swing.JTextField AddressText;
    private javax.swing.JLabel AgeLabel;
    private javax.swing.JLabel AgeLabel1;
    private javax.swing.JLabel AgeLabel3;
    private javax.swing.JTextField AgeText;
    private javax.swing.JComboBox<String> EmailComboBox;
    private javax.swing.JComboBox<String> EmailComboBox1;
    private javax.swing.JTextField EmailText;
    private javax.swing.JTextField EmailText1;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField FAddress2Text;
    private javax.swing.JTextField FAddressText;
    private javax.swing.JTextField FFirstNameText;
    private javax.swing.JTextField FLastNameText;
    private javax.swing.JRadioButton FemaleRadioButton;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JTextField FirstNameText;
    private javax.swing.JLabel LastNameLabel;
    private javax.swing.JLabel LastNameLabel1;
    private javax.swing.JLabel LastNameLabel3;
    private javax.swing.JLabel LastNameLabel4;
    private javax.swing.JTextField LastNameText;
    private javax.swing.JRadioButton MaleRadioButton;
    private javax.swing.JComboBox<String> NameTitleComboBox;
    private javax.swing.JComboBox<String> NameTitleComboBox1;
    private javax.swing.JButton NextButton;
    private javax.swing.JFormattedTextField PhoneText;
    private javax.swing.JFormattedTextField PhoneText1;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JLabel TitleLabel1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    public boolean isValidated() {
if (NameTitleComboBox.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Name Title is required", "Error", JOptionPane.ERROR_MESSAGE);
            NameTitleComboBox.requestFocus();
            return false;

        }

        if (FirstNameText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "First Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            FirstNameText.requestFocus();
            return false;

        }
        

        if (isStringonlyName(FirstNameText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "First Name should only be Alphabet", "Error", JOptionPane.ERROR_MESSAGE);
            FirstNameText.setText("");
            FirstNameText.requestFocus();
            return false;

        }
        if (LastNameText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Last Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            LastNameText.requestFocus();
            return false;

        }

        if (isStringonlyName(LastNameText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Last Name should be Alphabet", "Error", JOptionPane.ERROR_MESSAGE);
            LastNameText.setText("");
            LastNameText.requestFocus();
            return false;

        }
        if (AgeText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Age is required", "Error", JOptionPane.ERROR_MESSAGE);
            AgeText.requestFocus();
            return false;

        }

        if (!isStringonlyInteger(AgeText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Age should be Integer ", "Error", JOptionPane.ERROR_MESSAGE);
            AgeText.setText("");
            AgeText.requestFocus();
            return false;

        }
        if (AgeText.getText().trim().length() < 0 || AgeText.getText().trim().length() > 3) {
            JOptionPane.showMessageDialog(null, "Age shouldn't increase Hundrends", "Error", JOptionPane.ERROR_MESSAGE);
            AgeText.setText("");
            AgeText.requestFocus();
            return false;

        }
 if (PhoneText.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Patient Phone Number is required", "Error", JOptionPane.ERROR_MESSAGE);
            PhoneText.setText("+92");
            PhoneText.requestFocus();
            return false;
        }
        if (EmailText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Patient Email is required", "Error", JOptionPane.ERROR_MESSAGE);
            EmailText.requestFocus();
            return false;

        }
        if (EmailText.getText().trim().contains("@") ) {
            JOptionPane.showMessageDialog(null, "Email should be valid", "Error", JOptionPane.ERROR_MESSAGE);
            EmailText.setText("");
            EmailText.requestFocus();
            return false;

        }
         if (EmailText.getText().trim().contains(".") ) {
            JOptionPane.showMessageDialog(null, "Email should be valid", "Error", JOptionPane.ERROR_MESSAGE);
            EmailText.setText("");
            EmailText.requestFocus();
            return false;

        }
        if (AddressText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Address Line 1 is required", "Error", JOptionPane.ERROR_MESSAGE);
            AddressText.requestFocus();
            return false;

        }
        if (AddressText.getText().trim().contains(",")) {
            JOptionPane.showMessageDialog(null, "Address Line 1 Should be valid. Comma not Allowed here", "Error", JOptionPane.ERROR_MESSAGE);
            AddressText.requestFocus();
            return false;

        }
        if (Address2Text.getText().trim().contains(",")) {
            JOptionPane.showMessageDialog(null, "Address Line 2 Should be valid. Comma not Allowed here", "Error", JOptionPane.ERROR_MESSAGE);
            Address2Text.requestFocus();
            return false;

        }
        if (NameTitleComboBox1.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(null, "Father/ Gaurdian Name Title is required", "Error", JOptionPane.ERROR_MESSAGE);
            NameTitleComboBox1.requestFocus();
            return false;

        }
        if (FFirstNameText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Father First Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            FFirstNameText.requestFocus();
            return false;

        }

        if (isStringonlyName(FFirstNameText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Father First Name should only be Alphabet", "Error", JOptionPane.ERROR_MESSAGE);
            FFirstNameText.setText("");
            FFirstNameText.requestFocus();
            return false;

        }
        if (FLastNameText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Father Last Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            FLastNameText.requestFocus();
            return false;

        }

        if (isStringonlyName(FLastNameText.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Father Last Name should be Alphabet", "Error", JOptionPane.ERROR_MESSAGE);
            FLastNameText.setText("");
            FLastNameText.requestFocus();
            return false;

        }
        if (PhoneText1.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Father/Gaurdian Phone Number is required", "Error", JOptionPane.ERROR_MESSAGE);
            PhoneText1.setText("+92");
            PhoneText1.requestFocus();
            return false;
        }
        if (EmailText1.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Father/Gaurdian Email is required", "Error", JOptionPane.ERROR_MESSAGE);
            EmailText.requestFocus();
            return false;

        }
          if (EmailText1.getText().trim().contains("@") ) {
            JOptionPane.showMessageDialog(null, "Email should be valid", "Error", JOptionPane.ERROR_MESSAGE);
            EmailText.setText("");
            EmailText.requestFocus();
            return false;

        }
         if (EmailText1.getText().trim().contains(".") ) {
            JOptionPane.showMessageDialog(null, "Email should be valid", "Error", JOptionPane.ERROR_MESSAGE);
            EmailText.setText("");
            EmailText.requestFocus();
            return false;

        }

              
        if (FAddressText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Father/Gaurdian Address Line 1 is required", "Error", JOptionPane.ERROR_MESSAGE);
            FAddressText.requestFocus();
            return false;

        }
if (FAddressText.getText().trim().contains(",")) {
            JOptionPane.showMessageDialog(null, "Father/Gaurdian Address Line 1 Should be valid. Comma not Allowed here", "Error", JOptionPane.ERROR_MESSAGE);
            FAddressText.requestFocus();
            return false;

        }
        if (FAddress2Text.getText().trim().contains(",")) {
            JOptionPane.showMessageDialog(null, "Father/Gaurdian Address Line 2 Should be valid. Comma not Allowed here", "Error", JOptionPane.ERROR_MESSAGE);
            FAddress2Text.requestFocus();
            return false;

        }
        
        return true;
    }
public boolean isStringonlyName(String text) {

        for (int i = 0; i < text.length(); i++) {
            char a = text.charAt(i);
            if (!Character.isAlphabetic(a) || !Character.isWhitespace(a)) {
                return false;

            }
        }

        return true;
    }

 public boolean isStringonlyInteger(String text) {
        boolean isStringInteger = true;
        try {
            int age = Integer.parseInt(text);
            isStringInteger = true;
        } catch (NumberFormatException ex) {
            isStringInteger = false;
        }
        return isStringInteger;
    }

    private void InfoPrintinf(String[][] Dataa) {
 NameTitleComboBox.setSelectedItem(Dataa[0][1]);
        FirstNameText.setText(Dataa[0][2]);
        LastNameText.setText(Dataa[0][3]);
        AgeText.setText(Dataa[0][4]);
        if ("Male".equals(Dataa[0][5])) {
                MaleRadioButton.setSelected(true);
            } else if ("Female".equals(Dataa[0][5])) {
                FemaleRadioButton.setSelected(true);
            }
            
        PhoneText.setText(Dataa[0][6]);
         String aaa1[]=Dataa[0][7].split("@");
        EmailText.setText(aaa1[0]);
        EmailComboBox.setSelectedItem(aaa);
        
        AddressText.setText(Dataa[0][8]);
        Address2Text.setText(Dataa[0][9]);
        
        
      NameTitleComboBox1.setSelectedItem(Dataa[1][1]);
        FFirstNameText.setText(Dataa[1][2]);
        FLastNameText.setText(Dataa[1][3]);
        
        PhoneText1.setText(Dataa[1][4]);
        String aaaa[]=Dataa[1][5].split("@");
        EmailText1.setText(aaaa[0]);
        EmailComboBox1.setSelectedItem(bbb);
        FAddressText.setText(Dataa[1][6]);
        FAddress2Text.setText(Dataa[1][7]);
    }
}
